# generated by datamodel-codegen:
#   filename:  calendar_response.json
#   timestamp: 2024-12-16T18:28:11+00:00

from __future__ import annotations

from typing import TypedDict, List


class CapabilitiesDriveModel(TypedDict):
    canAddChildren: str
    canComment: str
    canCopy: str
    canDeleteDrive: str
    canDownload: str
    canEdit: str
    canListChildren: str
    canManageMembers: str
    canReadRevisions: str
    canRename: str
    canRenameDrive: str
    canChangeDriveBackground: str
    canShare: str
    canChangeCopyRequiresWriterPermissionRestriction: str
    canChangeDomainUsersOnlyRestriction: str
    canChangeDriveMembersOnlyRestriction: str
    canChangeSharingFoldersRequiresOrganizerPermissionRestriction: str
    canResetDriveRestrictions: str
    canDeleteChildren: str
    canTrashChildren: str


class BackgroundImageFile(TypedDict):
    id: str
    xCoordinate: str
    yCoordinate: str
    width: str


class Restrictions(TypedDict):
    copyRequiresWriterPermission: str
    domainUsersOnly: str
    driveMembersOnly: str
    adminManagedRestrictions: str
    sharingFoldersRequiresOrganizerPermission: str


class DriveModel(TypedDict):
    id: str
    name: str
    colorRgb: str
    kind: str
    backgroundImageLink: str
    capabilities: CapabilitiesDriveModel
    themeId: str
    backgroundImageFile: BackgroundImageFile
    createdTime: str
    hidden: str
    restrictions: Restrictions
    orgUnitId: str


class DrivesModel(TypedDict):
    nextPageToken: str
    kind: str
    drives: List[DriveModel]


class UserModel(TypedDict):
    displayName: str
    kind: str
    me: str
    permissionId: str
    emailAddress: str
    photoLink: str


class PermissionDetail(TypedDict):
    permissionType: str
    inheritedFrom: str
    role: str
    inherited: str


class TeamDrivePermissionDetail(TypedDict):
    teamDrivePermissionType: str
    inheritedFrom: str
    role: str
    inherited: str


class PermissionsModel(TypedDict):
    id: str
    displayName: str
    type: str
    kind: str
    permissionDetails: List[PermissionDetail]
    photoLink: str
    emailAddress: str
    role: str
    allowFileDiscovery: str
    domain: str
    expirationTime: str
    teamDrivePermissionDetails: List[TeamDrivePermissionDetail]
    deleted: str
    view: str
    pendingOwner: str


class ContentRestrictionModel(TypedDict):
    readOnly: str
    reason: str
    type: str
    restrictingUser: UserModel
    restrictionTime: str
    ownerRestricted: str
    systemRestricted: str


class FieldModel(TypedDict):
    kind: str
    id: str
    valueType: str
    dateString: List[str]
    integer: List[str]
    selection: List[str]
    text: List[str]
    user: List[UserModel]


Fields = TypedDict(
    "Fields",
    {
        "string": FieldModel,
        "...": None,
    },
)


class LabelModel(TypedDict):
    id: str
    revisionId: str
    kind: str
    fields: Fields


class Thumbnail(TypedDict):
    image: str
    mimeType: str


class ContentHints(TypedDict):
    indexableText: str
    thumbnail: Thumbnail


ExportLinks = TypedDict(
    "ExportLinks",
    {
        "string": str,
        "...": None,
    },
)

Properties = TypedDict(
    "Properties",
    {
        "string": str,
        "...": None,
    },
)

AppProperties = TypedDict(
    "AppProperties",
    {
        "string": str,
        "...": None,
    },
)


class Capabilities(TypedDict):
    canChangeViewersCanCopyContent: str
    canMoveChildrenOutOfDrive: str
    canReadDrive: str
    canEdit: str
    canCopy: str
    canComment: str
    canAddChildren: str
    canDelete: str
    canDownload: str
    canListChildren: str
    canRemoveChildren: str
    canRename: str
    canTrash: str
    canReadRevisions: str
    canReadTeamDrive: str
    canMoveTeamDriveItem: str
    canChangeCopyRequiresWriterPermission: str
    canMoveItemIntoTeamDrive: str
    canUntrash: str
    canModifyContent: str
    canMoveItemWithinTeamDrive: str
    canMoveItemOutOfTeamDrive: str
    canDeleteChildren: str
    canMoveChildrenOutOfTeamDrive: str
    canMoveChildrenWithinTeamDrive: str
    canTrashChildren: str
    canMoveItemOutOfDrive: str
    canAddMyDriveParent: str
    canRemoveMyDriveParent: str
    canMoveItemWithinDrive: str
    canShare: str
    canMoveChildrenWithinDrive: str
    canModifyContentRestriction: str
    canAddFolderFromAnotherDrive: str
    canChangeSecurityUpdateEnabled: str
    canAcceptOwnership: str
    canReadLabels: str
    canModifyLabels: str
    canModifyEditorContentRestriction: str
    canModifyOwnerContentRestriction: str
    canRemoveContentRestriction: str


class Location(TypedDict):
    latitude: str
    longitude: str
    altitude: str


class ImageMediaMetadata(TypedDict):
    flashUsed: str
    meteringMode: str
    sensor: str
    exposureMode: str
    colorSpace: str
    whiteBalance: str
    width: str
    height: str
    location: Location
    rotation: str
    time: str
    cameraMake: str
    cameraModel: str
    exposureTime: str
    aperture: str
    focalLength: str
    isoSpeed: str
    exposureBias: str
    maxApertureValue: str
    subjectDistance: str
    lens: str


class VideoMediaMetadata(TypedDict):
    width: str
    height: str
    durationMillis: str


class ShortcutDetails(TypedDict):
    targetId: str
    targetMimeType: str
    targetResourceKey: str


class LinkShareMetadata(TypedDict):
    securityUpdateEligible: str
    securityUpdateEnabled: str


class LabelInfo(TypedDict):
    labels: List[LabelModel]


class FileModel(TypedDict):
    kind: str
    driveId: str
    fileExtension: str
    copyRequiresWriterPermission: str
    md5Checksum: str
    contentHints: ContentHints
    writersCanShare: str
    viewedByMe: str
    mimeType: str
    exportLinks: ExportLinks
    parents: List[str]
    thumbnailLink: str
    iconLink: str
    shared: str
    lastModifyingUser: UserModel
    owners: List[UserModel]
    headRevisionId: str
    sharingUser: UserModel
    webViewLink: str
    webContentLink: str
    size: str
    viewersCanCopyContent: str
    permissions: List[PermissionsModel]
    hasThumbnail: str
    spaces: List[str]
    folderColorRgb: str
    id: str
    name: str
    description: str
    starred: str
    trashed: str
    explicitlyTrashed: str
    createdTime: str
    modifiedTime: str
    modifiedByMeTime: str
    viewedByMeTime: str
    sharedWithMeTime: str
    quotaBytesUsed: str
    version: str
    originalFilename: str
    ownedByMe: str
    fullFileExtension: str
    properties: Properties
    appProperties: AppProperties
    isAppAuthorized: str
    teamDriveId: str
    capabilities: Capabilities
    hasAugmentedPermissions: str
    trashingUser: UserModel
    thumbnailVersion: str
    trashedTime: str
    modifiedByMe: str
    permissionIds: List[str]
    imageMediaMetadata: ImageMediaMetadata
    videoMediaMetadata: VideoMediaMetadata
    shortcutDetails: ShortcutDetails
    contentRestrictions: List[ContentRestrictionModel]
    resourceKey: str
    linkShareMetadata: LinkShareMetadata
    labelInfo: LabelInfo
    sha1Checksum: str
    sha256Checksum: str


class FilesModel(TypedDict):
    nextPageToken: str
    kind: str
    incompleteSearch: str
    files: List[FileModel]


Detail = TypedDict(
    "Detail",
    {
        "@type": str,
        "field1": str,
    },
)


class StatusModel(TypedDict):
    code: str
    message: str
    details: List[Detail]


Response = TypedDict(
    "Response",
    {
        "@type": str,
        "field1": str,
    },
)


class DownloadMetadata(TypedDict):
    type: str


class DownloadResponse(TypedDict):
    type: str
    downloadUri: str
    partialDownloadAllowed: bool


class DownloadOperationModel(TypedDict):
    name: str
    metadata: DownloadMetadata
    done: str
    error: StatusModel
    response: DownloadResponse
