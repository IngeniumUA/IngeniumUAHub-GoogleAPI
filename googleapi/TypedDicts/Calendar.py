# generated by datamodel-codegen:
#   filename:  calendar_response.json
#   timestamp: 2024-12-13T15:35:14+00:00

from __future__ import annotations

from typing import List, TypedDict


class DefaultReminder(TypedDict):
    method: str
    minutes: str


class Notification(TypedDict):
    type: str
    method: str


class NotificationSettings(TypedDict):
    notifications: List[Notification]


class ConferenceProperties(TypedDict):
    allowedConferenceSolutionTypes: List[str]


class CalendarListEntryModel(TypedDict):
    kind: str
    etag: str
    id: str
    summary: str
    description: str
    location: str
    timeZone: str
    summaryOverride: str
    colorId: str
    backgroundColor: str
    foregroundColor: str
    hidden: str
    selected: str
    accessRole: str
    defaultReminders: List[DefaultReminder]
    notificationSettings: NotificationSettings
    primary: str
    deleted: str
    conferenceProperties: ConferenceProperties


class CalendarListModel(TypedDict):
    kind: str
    etag: str
    nextPageToken: str
    nextSyncToken: str
    items: List[CalendarListEntryModel]


class BaseCalendarModel(TypedDict):
    summary: str
    description: str
    location: str
    timeZone: str


class CalendarModel(TypedDict):
    kind: str
    etag: str
    id: str
    summary: str
    description: str
    location: str
    timeZone: str
    conferenceProperties: ConferenceProperties


class Creator(TypedDict):
    id: str
    email: str
    displayName: str
    self: str


class Organizer(TypedDict):
    id: str
    email: str
    displayName: str
    self: str


class BaseStart(TypedDict):
    dateTime: str
    timeZone: str


class Start(TypedDict):
    date: str
    dateTime: str
    timeZone: str


class BaseEnd(TypedDict):
    dateTime: str
    timeZone: str


class End(TypedDict):
    date: str
    dateTime: str
    timeZone: str


class OriginalStartTime(TypedDict):
    date: str
    dateTime: str
    timeZone: str


class Attendee(TypedDict):
    id: str
    email: str
    displayName: str
    organizer: str
    self: str
    resource: str
    optional: str
    responseStatus: str
    comment: str
    additionalGuests: str


class ConferenceSolutionKey(TypedDict):
    type: str


class Status(TypedDict):
    statusCode: str


class CreateRequest(TypedDict):
    requestId: str
    conferenceSolutionKey: ConferenceSolutionKey
    status: Status


class EntryPoint(TypedDict):
    entryPointType: str
    uri: str
    label: str
    pin: str
    accessCode: str
    meetingCode: str
    passcode: str
    password: str


class Key(TypedDict):
    type: str


class ConferenceSolution(TypedDict):
    key: Key
    name: str
    iconUri: str


class ConferenceData(TypedDict):
    createRequest: CreateRequest
    entryPoints: List[EntryPoint]
    conferenceSolution: ConferenceSolution
    conferenceId: str
    signature: str
    notes: str


class Override(TypedDict):
    method: str
    minutes: str


class Reminders(TypedDict):
    useDefault: str
    overrides: List[Override]


class Source(TypedDict):
    url: str
    title: str


class CustomLocation(TypedDict):
    label: str


class OfficeLocation(TypedDict):
    buildingId: str
    floorId: str
    floorSectionId: str
    deskId: str
    label: str


class WorkingLocationProperties(TypedDict):
    type: str
    homeOffice: str
    customLocation: CustomLocation
    officeLocation: OfficeLocation


class OutOfOfficeProperties(TypedDict):
    autoDeclineMode: str
    declineMessage: str


class FocusTimeProperties(TypedDict):
    autoDeclineMode: str
    declineMessage: str
    chatStatus: str


class Attachment(TypedDict):
    fileUrl: str
    title: str
    mimeType: str
    iconLink: str
    fileId: str


class BirthdayProperties(TypedDict):
    contact: str
    type: str
    customTypeName: str


class BaseEventModel(TypedDict):
    summary: str
    location: str
    description: str
    start: BaseStart
    end: BaseEnd


class EventModel(TypedDict):
    kind: str
    etag: str
    id: str
    status: str
    htmlLink: str
    created: str
    updated: str
    summary: str
    description: str
    location: str
    colorId: str
    creator: Creator
    organizer: Organizer
    start: Start
    end: End
    endTimeUnspecified: str
    recurrence: List[str]
    recurringEventId: str
    originalStartTime: OriginalStartTime
    transparency: str
    visibility: str
    iCalUID: str
    sequence: str
    attendees: List[Attendee]
    attendeesOmitted: str
    hangoutLink: str
    conferenceData: ConferenceData
    anyoneCanAddSelf: str
    guestsCanInviteOthers: str
    guestsCanModify: str
    guestsCanSeeOtherGuests: str
    privateCopy: str
    locked: str
    reminders: Reminders
    source: Source
    workingLocationProperties: WorkingLocationProperties
    outOfOfficeProperties: OutOfOfficeProperties
    focusTimeProperties: FocusTimeProperties
    attachments: List[Attachment]
    birthdayProperties: BirthdayProperties
    eventType: str


class EventsModel(TypedDict):
    kind: str
    etag: str
    summary: str
    description: str
    updated: str
    timeZone: str
    accessRole: str
    defaultReminders: List[DefaultReminder]
    nextPageToken: str
    nextSyncToken: str
    items: List[EventsModel]


class Scope(TypedDict):
    type: str
    value: str


class BaseAclRuleModel(TypedDict):
    scope: Scope
    role: str


class AclRuleModel(TypedDict):
    kind: str
    etag: str
    id: str
    scope: Scope
    role: str


class AclModel(TypedDict):
    kind: str
    etag: str
    nextPageToken: str
    nextSyncToken: str
    items: List[AclRuleModel]
