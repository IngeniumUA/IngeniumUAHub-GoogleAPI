name: Auto Tag Version
on:
  push:
    branches: [main]

jobs:
  tag_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required to access all git history and tags

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Get version from setup.py
        id: get_version
        run: |
          # More robust version extraction that handles different quote styles and whitespace
          VERSION=$(python3 -c "from setuptools import setup; __file__='setup.py'; setup = lambda **kwargs: print(kwargs['version']); exec(open(__file__).read())")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: ${VERSION}"

      - name: Verify tag doesn't exist
        id: check_tag
        run: |
          if git rev-parse -q --verify "refs/tags/v$VERSION" >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION already exists - skipping"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v$VERSION will be created"
          fi

      - name: Create and push version tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v$VERSION" -m "Version $VERSION"
          git push origin "v$VERSION"
          echo "Successfully created tag v$VERSION"

      - name: Show workflow result
        run: |
          if [ "${{ steps.check_tag.outputs.exists }}" = "true" ]; then
            echo "No new tag was created (existing tag found)"
          else
            echo "New tag v$VERSION was created and pushed"
          fi